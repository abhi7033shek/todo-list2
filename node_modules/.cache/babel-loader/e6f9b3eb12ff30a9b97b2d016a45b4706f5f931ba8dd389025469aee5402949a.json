{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\as994\\\\OneDrive\\\\Desktop\\\\todo list 2\\\\todolist\\\\src\\\\Inbox.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState } from 'react'\n\n// export default function Inbox(props) {\n//     const [newTask,setNewTask] = useState(false)\n//     const titleRef = useRef()\n//     const calendarRef = useRef()\n//     const newtaskHandler=()=>{\n//         setNewTask(true)\n//     }\n//     const addHandler=(e)=>{\n//         e.preventDefault()\n//         if(titleRef.current.value === \"\"){\n//             window.alert(\"Task Can Not Be Empty\")\n//             return;\n\n//         }\n//         const newObj = {\n//             number : props.list.length+1,\n//             title : titleRef.current.value,\n//             date : new Date(calendarRef.current.value)\n//         }\n\n//         props.append(newObj)\n//         setNewTask(false)\n//     }\n//     const cancelHandler=()=>{\n//         setNewTask(false)\n//     }\n//     const deleteHandler = (index) => {\n//         const updatedList = props.list.filter((task,i) => i !== index)\n//         props.setList(updatedList)\n//         }\n\n//   return (\n//     <div>\n//         <h3>INBOX</h3>\n//         {!newTask && (\n//             <button className='new' onClick={newtaskHandler}>+Add New</button>\n//         )}\n//         {newTask && (\n//             <form className='newtask-box'>\n//                 <input type='text' ref={titleRef}/>\n//                 <div className='button'>\n//                     <button className='new' onClick={addHandler}>Add Task</button>\n//                     <button className='new' onClick={cancelHandler}>Cancel</button>\n//                     <input type=\"date\" ref={calendarRef} defaultValue=\"2023-01-04\"/>\n//                 </div>\n//             </form>\n//         )}\n//         <div>\n//             {props.list.map((list,index)=>{\n//                 return(\n//                     <div className='box' key={index}>\n//                         {list.title} ({list.date.toLocaleString()})\n//                         <button className=\"delete\" onClick={() => deleteHandler(index)}>Delete</button>\n\n//                     </div>\n//                 )\n//             })}\n//         </div>\n//     </div>\n//   )\n// }\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inbox(props) {\n  _s();\n  const [newTask, setNewTask] = useState(false);\n  const titleRef = useRef();\n  const calendarRef = useRef();\n  const newtaskHandler = () => {\n    setNewTask(true);\n  };\n  const addHandler = e => {\n    e.preventDefault();\n    if (titleRef.current.value === \"\") {\n      window.alert(\"Task Can Not Be Empty\");\n      return;\n    }\n    const newObj = {\n      number: props.list.length + 1,\n      title: titleRef.current.value,\n      date: new Date(calendarRef.current.value)\n    };\n    props.append(newObj);\n    setNewTask(false);\n  };\n  const cancelHandler = () => {\n    setNewTask(false);\n  };\n  const deleteHandler = index => {\n    const updatedList = props.list.filter((task, i) => i !== index);\n    props.setList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"INBOX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), !newTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new\",\n      onClick: newtaskHandler,\n      children: \"+Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }, this), newTask && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newtask-box\",\n      onSubmit: addHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: titleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new\",\n          onClick: cancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ref: calendarRef,\n          defaultValue: \"2023-01-04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.list.map((list, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [list.title, \" (\", list.date.toLocaleString(), \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => deleteHandler(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 1\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 1\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 1\n  }, this);\n}\n_s(Inbox, \"Q5jfdBNcYWC4tzxFzcQkNwQqMOQ=\");\n_c = Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useRef","useState","Inbox","props","newTask","setNewTask","titleRef","calendarRef","newtaskHandler","addHandler","e","preventDefault","current","value","window","alert","newObj","number","list","length","title","date","Date","append","cancelHandler","deleteHandler","index","updatedList","filter","task","i","setList","map","toLocaleString"],"sources":["C:/Users/as994/OneDrive/Desktop/todo list 2/todolist/src/Inbox.js"],"sourcesContent":["// import React, { useRef, useState } from 'react'\r\n\r\n// export default function Inbox(props) {\r\n//     const [newTask,setNewTask] = useState(false)\r\n//     const titleRef = useRef()\r\n//     const calendarRef = useRef()\r\n//     const newtaskHandler=()=>{\r\n//         setNewTask(true)\r\n//     }\r\n//     const addHandler=(e)=>{\r\n//         e.preventDefault()\r\n//         if(titleRef.current.value === \"\"){\r\n//             window.alert(\"Task Can Not Be Empty\")\r\n//             return;\r\n\r\n//         }\r\n//         const newObj = {\r\n//             number : props.list.length+1,\r\n//             title : titleRef.current.value,\r\n//             date : new Date(calendarRef.current.value)\r\n//         }\r\n        \r\n//         props.append(newObj)\r\n//         setNewTask(false)\r\n//     }\r\n//     const cancelHandler=()=>{\r\n//         setNewTask(false)\r\n//     }\r\n//     const deleteHandler = (index) => {\r\n//         const updatedList = props.list.filter((task,i) => i !== index)\r\n//         props.setList(updatedList)\r\n//         }\r\n   \r\n    \r\n//   return (\r\n//     <div>\r\n//         <h3>INBOX</h3>\r\n//         {!newTask && (\r\n//             <button className='new' onClick={newtaskHandler}>+Add New</button>\r\n//         )}\r\n//         {newTask && (\r\n//             <form className='newtask-box'>\r\n//                 <input type='text' ref={titleRef}/>\r\n//                 <div className='button'>\r\n//                     <button className='new' onClick={addHandler}>Add Task</button>\r\n//                     <button className='new' onClick={cancelHandler}>Cancel</button>\r\n//                     <input type=\"date\" ref={calendarRef} defaultValue=\"2023-01-04\"/>\r\n//                 </div>\r\n//             </form>\r\n//         )}\r\n//         <div>\r\n//             {props.list.map((list,index)=>{\r\n//                 return(\r\n//                     <div className='box' key={index}>\r\n//                         {list.title} ({list.date.toLocaleString()})\r\n//                         <button className=\"delete\" onClick={() => deleteHandler(index)}>Delete</button>\r\n\r\n//                     </div>\r\n//                 )\r\n//             })}\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useRef, useState } from 'react'\r\n\r\nexport default function Inbox(props) {\r\nconst [newTask,setNewTask] = useState(false)\r\nconst titleRef = useRef()\r\nconst calendarRef = useRef()\r\nconst newtaskHandler = () => {\r\nsetNewTask(true)\r\n}\r\nconst addHandler = (e) => {\r\ne.preventDefault()\r\nif (titleRef.current.value === \"\") {\r\nwindow.alert(\"Task Can Not Be Empty\")\r\nreturn;\r\n}\r\nconst newObj = {\r\nnumber : props.list.length + 1,\r\ntitle : titleRef.current.value,\r\ndate : new Date(calendarRef.current.value)\r\n}\r\nprops.append(newObj)\r\nsetNewTask(false)\r\n}\r\nconst cancelHandler = () => {\r\nsetNewTask(false)\r\n}\r\nconst deleteHandler = (index) => {\r\nconst updatedList = props.list.filter((task,i) => i !== index)\r\nprops.setList(updatedList)\r\n}\r\nreturn (\r\n<div>\r\n<h3>INBOX</h3>\r\n{!newTask && (\r\n<button className='new' onClick={newtaskHandler}>+Add New</button>\r\n)}\r\n{newTask && (\r\n<form className='newtask-box' onSubmit={addHandler}>\r\n<input type='text' ref={titleRef}/>\r\n<div className='button'>\r\n<button className='new'>Add Task</button>\r\n<button className='new' onClick={cancelHandler}>Cancel</button>\r\n<input type=\"date\" ref={calendarRef} defaultValue=\"2023-01-04\"/>\r\n</div>\r\n</form>\r\n)}\r\n<div>\r\n{props.list.map((list, index) => {\r\nreturn(\r\n<div className='box' key={index}>\r\n{list.title} ({list.date.toLocaleString()})\r\n<button className=\"delete\" onClick={() => deleteHandler(index)}>Delete</button>\r\n</div>\r\n)\r\n})}\r\n</div>\r\n</div>\r\n)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}